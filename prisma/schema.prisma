// prisma/schema.prisma

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  colegiado String   @unique
  name      String
  email     String   @unique
  dpi       String   @unique
  birthDate DateTime
  passwordHash String
  role      String   @default("voter") // 'admin' o 'voter'
  
  votes     Vote[]   // Relación uno a muchos con votos
}

model Campaign {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  isActive    Boolean   @default(true) // 1 = Activa, 0 = Inactiva
  
  candidates  Candidate[] // Relación uno a muchos con candidatos
  votes       Vote[]      // Relación uno a muchos con votos
}

model Candidate {
  id         Int       @id @default(autoincrement())
  name       String
  campaignId Int
  campaign   Campaign  @relation(fields: [campaignId], references: [id]) // Relación con Campaign
  
  votes      Vote[]    // Relación uno a muchos con votos
}

model Vote {
  id         Int      @id @default(autoincrement())
  userEmail  String   // Referencia al correo del votante
  candidateId Int     // Referencia al candidato
  campaignId Int      // Referencia a la campaña

  user       User     @relation(fields: [userEmail], references: [email]) // Relación con User
  candidate  Candidate @relation(fields: [candidateId], references: [id]) // Relación con Candidate
  campaign   Campaign  @relation(fields: [campaignId], references: [id]) // Relación con Campaign

  @@unique([userEmail, campaignId]) // Asegura que el mismo usuario no vote más de una vez por campaña
}
